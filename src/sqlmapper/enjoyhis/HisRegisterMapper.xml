<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.enjoyhis.persistence.his.dao.HisRegisterMapper">
	<resultMap id="BaseResultMap" type="com.enjoyhis.persistence.his.po.HisRegister">
		<id column="id" property="id" jdbcType="BIGINT" />
		<result column="pat_id" property="patId" jdbcType="BIGINT" />
		<result column="gh_time" property="ghTime" jdbcType="TIMESTAMP" />
		<result column="begin_time" property="beginTime" jdbcType="TIMESTAMP" />
		<result column="end_time" property="endTime" jdbcType="TIMESTAMP" />
		<result column="appo_len" property="appoLen" jdbcType="INTEGER" />
		<result column="remark" property="remark" jdbcType="VARCHAR" />
		<result column="dentist_id" property="dentistId" jdbcType="BIGINT" />
		<result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
		<result column="modify_time" property="modifyTime" jdbcType="TIMESTAMP" />
		<result column="unit_code" property="unitCode" jdbcType="INTEGER" />
		<result column="isnew" property="isnew" jdbcType="INTEGER" />
		<result column="source" property="source" jdbcType="VARCHAR" />
		<result column="msg_id" property="msgId" jdbcType="BIGINT" />
		<result column="dept_code" property="deptCode" jdbcType="INTEGER" />
		<result column="service_items" property="serviceItems" jdbcType="VARCHAR" />
		<result column="operator" property="operator" jdbcType="BIGINT" />
		<result column="is_appoint" property="isAppoint" jdbcType="INTEGER" />
		<result column="status" property="status" jdbcType="INTEGER" />
		<result column="lock_user" property="lockUser" jdbcType="BIGINT" />
		<result column="statement_itemid" property="statementItemid" jdbcType="BIGINT" />
		<result column="out_call" property="outCall" jdbcType="VARCHAR" />
		<result column="affirm" property="affirm" jdbcType="INTEGER" />
		<result column="introducer" property="introducer" jdbcType="VARCHAR" />
		<result column="patName" property="patName" jdbcType="VARCHAR" />
		<result column="patType" property="patType" jdbcType="VARCHAR" />
	</resultMap>
	<sql id="Base_Column_List">
		<!-- WARNING - @mbggenerated This element is automatically generated by MyBatis Generator, do not modify. This element was generated on Tue Aug 16 12:49:58 CST 2016. -->
		id, pat_id, gh_time, begin_time, end_time, appo_len, remark, dentist_id, create_time,
		modify_time, unit_code, isnew, source, msg_id, dept_code, service_items, operator,
		is_appoint, status, lock_user, statement_itemid, out_call, affirm, introducer
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
		<!-- WARNING - @mbggenerated This element is automatically generated by MyBatis Generator, do not modify. This element was generated on Tue Aug 16 12:49:58 CST 2016. -->
		select
		a.*, b.pat_name patName, b.type patType
		from his_register a left join his_patient b on a.pat_id = b.id
		where a.id = #{id,jdbcType=BIGINT}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		<!-- WARNING - @mbggenerated This element is automatically generated by MyBatis Generator, do not modify. This element was generated on Tue Aug 16 12:49:58 CST 2016. -->
		delete from his_register
		where id = #{id,jdbcType=BIGINT}
	</delete>
	<insert id="insert" parameterType="com.enjoyhis.persistence.his.po.HisRegister" useGeneratedKeys="true" keyProperty="id">
		<!-- WARNING - @mbggenerated This element is automatically generated by MyBatis Generator, do not modify. This element was generated on Tue Aug 16 12:49:58 CST 2016. -->
		insert into his_register (id, pat_id, gh_time,
		begin_time, end_time, appo_len,
		remark, dentist_id, create_time,
		modify_time, unit_code, isnew,
		source, msg_id, dept_code,
		service_items, operator, is_appoint,
		status, lock_user, statement_itemid,
		out_call, introducer)
		values (#{id,jdbcType=BIGINT}, #{patId,jdbcType=BIGINT}, #{ghTime,jdbcType=TIMESTAMP},
		#{beginTime,jdbcType=TIMESTAMP}, #{endTime,jdbcType=TIMESTAMP}, #{appoLen,jdbcType=INTEGER},
		#{remark,jdbcType=VARCHAR}, #{dentistId,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP},
		#{modifyTime,jdbcType=TIMESTAMP}, #{unitCode,jdbcType=INTEGER}, #{isnew,jdbcType=INTEGER},
		#{source,jdbcType=VARCHAR}, #{msgId,jdbcType=BIGINT}, #{deptCode,jdbcType=INTEGER},
		#{serviceItems,jdbcType=VARCHAR}, #{operator,jdbcType=BIGINT}, #{isAppoint,jdbcType=INTEGER},
		#{status,jdbcType=INTEGER}, #{lockUser,jdbcType=BIGINT}, #{statementItemid,jdbcType=BIGINT},
		#{outCall,jdbcType=VARCHAR}), #{introducer,jdbcType=VARCHAR})
	</insert>
	<insert id="insertSelective" parameterType="com.enjoyhis.persistence.his.po.HisRegister" useGeneratedKeys="true" keyProperty="id">
		<!-- WARNING - @mbggenerated This element is automatically generated by MyBatis Generator, do not modify. This element was generated on Tue Aug 16 12:49:58 CST 2016. -->
		insert into his_register
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="patId != null">
				pat_id,
			</if>
			<if test="ghTime != null">
				gh_time,
			</if>
			<if test="beginTime != null">
				begin_time,
			</if>
			<if test="endTime != null">
				end_time,
			</if>
			<if test="appoLen != null">
				appo_len,
			</if>
			<if test="remark != null">
				remark,
			</if>
			<if test="dentistId != null">
				dentist_id,
			</if>
			<if test="createTime != null">
				create_time,
			</if>
			<if test="modifyTime != null">
				modify_time,
			</if>
			<if test="unitCode != null">
				unit_code,
			</if>
			<if test="isnew != null">
				isnew,
			</if>
			<if test="source != null">
				source,
			</if>
			<if test="msgId != null">
				msg_id,
			</if>
			<if test="deptCode != null">
				dept_code,
			</if>
			<if test="serviceItems != null">
				service_items,
			</if>
			<if test="operator != null">
				operator,
			</if>
			<if test="isAppoint != null">
				is_appoint,
			</if>
			<if test="status != null">
				status,
			</if>
			<if test="lockUser != null">
				lock_user,
			</if>
			<if test="statementItemid != null">
				statement_itemid,
			</if>
			<if test="outCall != null">
				out_call,
			</if>
			<if test="affirm != null">
				affirm,
			</if>
			<if test="introducer != null">
				introducer,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=BIGINT},
			</if>
			<if test="patId != null">
				#{patId,jdbcType=BIGINT},
			</if>
			<if test="ghTime != null">
				#{ghTime,jdbcType=TIMESTAMP},
			</if>
			<if test="beginTime != null">
				#{beginTime,jdbcType=TIMESTAMP},
			</if>
			<if test="endTime != null">
				#{endTime,jdbcType=TIMESTAMP},
			</if>
			<if test="appoLen != null">
				#{appoLen,jdbcType=INTEGER},
			</if>
			<if test="remark != null">
				#{remark,jdbcType=VARCHAR},
			</if>
			<if test="dentistId != null">
				#{dentistId,jdbcType=BIGINT},
			</if>
			<if test="createTime != null">
				#{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="modifyTime != null">
				#{modifyTime,jdbcType=TIMESTAMP},
			</if>
			<if test="unitCode != null">
				#{unitCode,jdbcType=INTEGER},
			</if>
			<if test="isnew != null">
				#{isnew,jdbcType=INTEGER},
			</if>
			<if test="source != null">
				#{source,jdbcType=VARCHAR},
			</if>
			<if test="msgId != null">
				#{msgId,jdbcType=BIGINT},
			</if>
			<if test="deptCode != null">
				#{deptCode,jdbcType=INTEGER},
			</if>
			<if test="serviceItems != null">
				#{serviceItems,jdbcType=VARCHAR},
			</if>
			<if test="operator != null">
				#{operator,jdbcType=BIGINT},
			</if>
			<if test="isAppoint != null">
				#{isAppoint,jdbcType=INTEGER},
			</if>
			<if test="status != null">
				#{status,jdbcType=INTEGER},
			</if>
			<if test="lockUser != null">
				#{lockUser,jdbcType=BIGINT},
			</if>
			<if test="statementItemid != null">
				#{statementItemid,jdbcType=BIGINT},
			</if>
			<if test="outCall != null">
				#{outCall,jdbcType=VARCHAR},
			</if>
			<if test="affirm != null">
				#{affirm,jdbcType=INTEGER},
			</if>
			<if test="introducer != null">
				#{introducer,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.enjoyhis.persistence.his.po.HisRegister">
		<!-- WARNING - @mbggenerated This element is automatically generated by MyBatis Generator, do not modify. This element was generated on Tue Aug 16 12:49:58 CST 2016. -->
		update his_register
		<set>
			<if test="patId != null">
				pat_id = #{patId,jdbcType=BIGINT},
			</if>
			<if test="ghTime != null">
				gh_time = #{ghTime,jdbcType=TIMESTAMP},
			</if>
			<if test="beginTime != null">
				begin_time = #{beginTime,jdbcType=TIMESTAMP},
			</if>
			<if test="endTime != null">
				end_time = #{endTime,jdbcType=TIMESTAMP},
			</if>
			<if test="appoLen != null">
				appo_len = #{appoLen,jdbcType=INTEGER},
			</if>
			<if test="remark != null">
				remark = #{remark,jdbcType=VARCHAR},
			</if>
			<if test="dentistId != null">
				dentist_id = #{dentistId,jdbcType=BIGINT},
			</if>
			<if test="createTime != null">
				create_time = #{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="modifyTime != null">
				modify_time = #{modifyTime,jdbcType=TIMESTAMP},
			</if>
			<if test="unitCode != null">
				unit_code = #{unitCode,jdbcType=INTEGER},
			</if>
			<if test="isnew != null">
				isnew = #{isnew,jdbcType=INTEGER},
			</if>
			<if test="source != null">
				source = #{source,jdbcType=VARCHAR},
			</if>
			<if test="msgId != null">
				msg_id = #{msgId,jdbcType=BIGINT},
			</if>
			<if test="deptCode != null">
				dept_code = #{deptCode,jdbcType=INTEGER},
			</if>
			<if test="serviceItems != null">
				service_items = #{serviceItems,jdbcType=VARCHAR},
			</if>
			<if test="operator != null">
				operator = #{operator,jdbcType=BIGINT},
			</if>
			<if test="isAppoint != null">
				is_appoint = #{isAppoint,jdbcType=INTEGER},
			</if>
			<if test="status != null">
				status = #{status,jdbcType=INTEGER},
			</if>
			<if test="lockUser != null">
				lock_user = #{lockUser,jdbcType=BIGINT},
			</if>
			<if test="statementItemid != null">
				statement_itemid = #{statementItemid,jdbcType=BIGINT},
			</if>
			<if test="outCall != null">
				out_call = #{outCall,jdbcType=VARCHAR},
			</if>
			<if test="affirm != null">
				affirm = #{affirm,jdbcType=INTEGER},
			</if>
		</set>
		where id = #{id,jdbcType=BIGINT}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.enjoyhis.persistence.his.po.HisRegister">
		<!-- WARNING - @mbggenerated This element is automatically generated by MyBatis Generator, do not modify. This element was generated on Tue Aug 16 12:49:58 CST 2016. -->
		update his_register
		set pat_id = #{patId,jdbcType=BIGINT},
		gh_time = #{ghTime,jdbcType=TIMESTAMP},
		begin_time = #{beginTime,jdbcType=TIMESTAMP},
		end_time = #{endTime,jdbcType=TIMESTAMP},
		appo_len = #{appoLen,jdbcType=INTEGER},
		remark = #{remark,jdbcType=VARCHAR},
		dentist_id = #{dentistId,jdbcType=BIGINT},
		create_time = #{createTime,jdbcType=TIMESTAMP},
		modify_time = #{modifyTime,jdbcType=TIMESTAMP},
		unit_code = #{unitCode,jdbcType=INTEGER},
		isnew = #{isnew,jdbcType=INTEGER},
		source = #{source,jdbcType=VARCHAR},
		msg_id = #{msgId,jdbcType=BIGINT},
		dept_code = #{deptCode,jdbcType=INTEGER},
		service_items = #{serviceItems,jdbcType=VARCHAR},
		operator = #{operator,jdbcType=BIGINT},
		is_appoint = #{isAppoint,jdbcType=INTEGER},
		status = #{status,jdbcType=INTEGER},
		lock_user = #{lockUser,jdbcType=BIGINT},
		statement_itemid = #{statementItemid,jdbcType=BIGINT},
		out_call = #{outCall,jdbcType=VARCHAR}
		where id = #{id,jdbcType=BIGINT}
	</update>
	<!-- addtional: insert add tag: useGeneratedKeys="true" keyProperty="id" then add follows: -->
	<sql id="Where_Clause">
		<where>
			<if test="id != null">
				and id = #{id,jdbcType=BIGINT}
			</if>
			<if test="patId != null">
				and pat_id = #{patId,jdbcType=BIGINT}
			</if>
			<if test="ghTime != null">
				and TO_DAYS(gh_time)=TO_DAYS(#{ghTime})
			</if>
			<if test="beginTime != null">
				and TO_DAYS(begin_time)=TO_DAYS(#{beginTime})
			</if>
			<if test="endTime != null">
				and TO_DAYS(end_time) = TO_DAYS(#{endTime})
			</if>
			<if test="appoLen != null">
				and appo_len = #{appoLen,jdbcType=INTEGER}
			</if>
			<if test="remark != null">
				and remark = #{remark,jdbcType=VARCHAR}
			</if>
			<if test="dentistId != null">
				and dentist_id = #{dentistId,jdbcType=BIGINT}
			</if>
			<if test="createTime != null">
				and create_time = #{createTime,jdbcType=TIMESTAMP}
			</if>
			<if test="modifyTime != null">
				and modify_time = #{modifyTime,jdbcType=TIMESTAMP}
			</if>
			<if test="unitCode != null">
				and unit_code = #{unitCode,jdbcType=INTEGER}
			</if>
			<if test="isnew != null">
				and isnew = #{isnew,jdbcType=INTEGER}
			</if>
			<if test="source != null">
				and source = #{source,jdbcType=VARCHAR}
			</if>
			<if test="msgId != null">
				and msg_id = #{msgId,jdbcType=BIGINT}
			</if>
			<if test="deptCode != null">
				and dept_code = #{deptCode,jdbcType=INTEGER}
			</if>
			<if test="serviceItems != null">
				and service_items = #{serviceItems,jdbcType=VARCHAR}
			</if>
			<if test="operator != null">
				and operator = #{operator,jdbcType=BIGINT}
			</if>
			<if test="isAppoint != null">
				and is_appoint = #{isAppoint,jdbcType=INTEGER}
			</if>
			<if test="status != null">
				and status = #{status,jdbcType=INTEGER}
			</if>
			<if test="lockUser != null">
				and lock_user = #{lockUser,jdbcType=BIGINT}
			</if>
			<if test="statementItemid != null">
				and statement_itemid = #{statementItemid,jdbcType=BIGINT}
			</if>
			<if test="outCall != null">
				and out_call = #{outCall,jdbcType=VARCHAR}
			</if>
			<if test="introducer != null">
				and introducer = #{introducer,jdbcType=VARCHAR}
			</if>
			<if test="sqlStr !=null">
				${sqlStr}
			</if>
		</where>
	</sql>

	<sql id="OrderBy_Clause">
		<if test="sqlSort != null">
			order by ${sqlSort}
		</if>
	</sql>

	<sql id="Limit_Clause">
		<if test="limitStart != null and limitCount != null">
			limit ${limitStart}, ${limitCount}
		</if>
	</sql>

	<select id="selectOne" resultMap="BaseResultMap" parameterType="com.enjoyhis.persistence.his.po.HisRegister">
		select
		<include refid="Base_Column_List" />
		from his_register
		<include refid="Where_Clause" />
	</select>

	<select id="selectList" resultMap="BaseResultMap" parameterType="com.enjoyhis.persistence.his.po.HisRegister">
		select
		<include refid="Base_Column_List" />
		from his_register
		<include refid="Where_Clause" />
		<include refid="OrderBy_Clause" />
		<include refid="Limit_Clause" />
	</select>

	<select id="selectCount" resultType="java.lang.Integer" parameterType="com.enjoyhis.persistence.his.po.HisRegister">
		select count(id) from his_register
		<include refid="Where_Clause" />
	</select>

	<delete id="deleteSelective" parameterType="com.enjoyhis.persistence.his.po.HisRegister">
		delete from his_register
		<include refid="Where_Clause" />
	</delete>

	<!-- follows is custom sql: -->
	<select id="findRegister" parameterType="map" resultType="map">
		SELECT
		a.id as registerId,
		b.id as patId,
		b.type as patType,
		a.affirm as affirm,
		statement.old_statement_code as statementCode,
		a.statement_itemid as statementItemid,
		a.isnew as isnew,
		a.status as status,
		b.pat_name as patName,
		b.mobile as mobile,
		b.age as age,
		b.user_sex as sex,
		b.pat_no as patNo,
		b.account_amount as accountAmount,
		c.employee_name as docName,
	<!--  a.modify_time as time, -->
		IF(a.begin_time IS NULL,a.gh_time,a.begin_time) as time,
		a.gh_time as ghTime,
		a.begin_time as beginTime,
		a.service_items as serviceItems,
		b.source as source,
		if(a.msg_id is null,0,a.msg_id) as msgId,
		if(a.out_call is null,0,a.out_call) as outCall
		FROM
		`his_register` a 
		LEFT JOIN his_patient b on a.pat_id=b.id
		LEFT JOIN his_employee c on a.dentist_id=c.id
		left join his_statement_item item on a.statement_itemid = item.id 
		left join his_statement statement on item.statement_id = statement.id 
		where
		<if test="dateTime!=null">
			(TO_DAYS(a.gh_time)=TO_DAYS(#{dateTime}) or TO_DAYS(a.begin_time)=TO_DAYS(#{dateTime}) )
		</if>
		<if test="type==1">
			and a.status=1
		</if>
		<if test="type==2">
			and a.status=2
		</if>
		<if test="type==3">
			and a.status=3
		</if>
		<if test="type==4">
			and a.status=4
		</if>
		<if test="dentistId!=null and dentistId!=''">
			and a.dentist_id=#{dentistId}
		</if>
		<if test="mobile!=null and mobile!=''">
			and b.mobile like CONCAT("%",#{mobile},"%")
		</if>
		<if test="name!=null and name!=''">
			and (b.pat_name like CONCAT("%",#{name},"%") or b.pym like CONCAT("%",#{name},"%"))
		</if>
		<if test="sortName!=null and sortName!=''">
			 order by ${sortName} ${sortOrder}
		</if>
	</select>

	<select id="selectRegisterCount" resultType="java.lang.Integer" parameterType="map">
		select count(1) from
		`his_register` a LEFT JOIN his_patient b on a.pat_id=b.id
		LEFT JOIN his_employee c on a.dentist_id=c.id
		where
		<if test="dateTime!=null and dateTime!=''">
			(TO_DAYS(a.gh_time)=TO_DAYS(#{dateTime}) or TO_DAYS(a.begin_time)=TO_DAYS(#{dateTime}) )
		</if>
		<if test="type==1">
			and a.status=1
		</if>
		<if test="type==2">
			and a.status=2
		</if>
		<if test="type==3">
			and a.status=3
		</if>
		<if test="type==4">
			and a.status=4
		</if>
		<if test="dentistId!=null and dentistId!=''">
			and a.dentist_id=#{dentistId}
		</if>
		<if test="mobile!=null and mobile!=''">
			and b.mobile like CONCAT("%",#{mobile},"%")
		</if>
		<if test="name!=null and name!=''">
			and (b.pat_name like CONCAT("%",#{name},"%") or b.pym like CONCAT("%",#{name},"%"))
		</if>
	</select>

	<!--患者统计表数据 -->
	<select id="patientReportData" parameterType="map" resultType="map">
		SELECT
		DATE_FORMAT(if(a.gh_time is not NULL,a.gh_time,a.begin_time),'%Y-%m-%d') as registerDate,
		count(DISTINCT a.pat_id) as patientNum,
		count(IF(a.gh_time is not null,true,null)) as registerNum,
		count(IF(a.gh_time is not null AND a.isnew=1,true,null)) as newRegisterNum,
		count(IF(a.gh_time is not null AND a.isnew=0,true,null)) as oldRegisterNum,
		count(IF(a.is_appoint=1,true,null)) as bookingNum,
		count(IF(a.is_appoint=1 AND a.gh_time is null,true,null)) as nonArrival
		FROM `his_register` a
		WHERE
		(
		TO_DAYS(if(a.gh_time is not NULL,a.gh_time,a.begin_time)) BETWEEN TO_DAYS(#{beginDate}) and TO_DAYS(#{endDate})
		)
		<if test="dentistId!=null and dentistId!=''">
			AND a.dentist_id=#{dentistId}
		</if>
		group by TO_DAYS(registerDate)
	</select>

	<!--预约未到统计表 -->
	<select id="nonarrivalReportData" parameterType="map" resultType="map">
		SELECT
		a.pat_id as patId,
		b.pat_no as patNo,
		b.pat_name as patName,
		b.mobile,
		DATE_FORMAT(a.begin_time,'%Y-%m-%d') as beginDate,
		/* DATE_FORMAT(a.begin_time,'%H:%I') as beginTime,*/
		a.begin_time as beginTime,
		a.appo_len as appoLen,
		a.service_items as serviceItems,
		a.remark,
		c.employee_name as doctorName,
		/* b.lasthosp_date as lasthospDate,*/
		DATE_FORMAT(b.lasthosp_date,'%Y-%m-%d') as lasthospDate,
		d.employee_name as operator
		FROM `his_register` a, his_patient b,his_employee c,his_employee d
		where
		(
		TO_DAYS(a.begin_time) BETWEEN TO_DAYS(#{beginDate}) and TO_DAYS(#{endDate})
		)
		and a.is_appoint=1 and a.status=1 and a.pat_id=b.id and a.dentist_id=c.id and a.operator=d.id

	</select>

	<select id="selectDateList" resultType="map" parameterType="com.enjoyhis.persistence.his.po.HisRegister">
		SELECT DATE_FORMAT(gh_time,'%Y年%m月%d日') AS gh_time , a.source, (SELECT pat_name FROM his_patient WHERE id = a.pat_id) AS pat_name , CASE a.isnew WHEN 0 THEN '复诊' WHEN 1 THEN '初诊' END AS isnew,
		(SELECT mobile FROM his_patient WHERE id = a.pat_id) AS mobile , a.service_items , (SELECT employee_name FROM his_employee WHERE id = a.dentist_id) AS doc_name , b.total_amount,
		(b.total_amount-b.pay_amount) AS qk_amount , b.pay_amount , b.debt_amount FROM his_register AS a, his_statement AS b ,his_statement_item AS c
		<include refid="Where_Clause" />
	</select>

	<select id="findBookingDocsByDate" parameterType="object" resultType="object">
		SELECT DISTINCT(a.dentist_id)
		FROM `his_register` a
		where TO_DAYS(a.begin_time)=TO_DAYS(#{bookingDate})
		and a.is_appoint=1
	</select>

	<!-- wujiaxing new -->

	<select id="selectRegisterList" resultMap="BaseResultMap" parameterType="com.enjoyhis.persistence.his.po.HisRegister">
		select
		a.*, b.pat_name patName, b.type patType
		from his_register a left join his_patient b on a.pat_id = b.id
		<where>
			<if test="patId != null">
				and pat_id=#{patId}
			</if>
			<if test="beginTime != null">
				and TO_DAYS(begin_time)&gt;=TO_DAYS(#{beginTime})
			</if>
			<if test="endTime != null">
				and TO_DAYS(end_time) &lt;= TO_DAYS(#{endTime})
			</if>
			<if test="status != null">
				and status = #{status,jdbcType=INTEGER}
			</if>
			<if test="isAppoint != null">
				and is_appoint = #{isAppoint}
			</if>
			<if test="dentistId != null">
				and dentist_id = #{dentistId,jdbcType=BIGINT}
			</if>
			<if test="sqlStr !=null">
				${sqlStr}
			</if>
		</where>
		order by begin_time asc, appo_len desc
	</select>

	<select id="selectRegisterListByMap" resultMap="BaseResultMap" parameterType="map">
		select
		a.*, b.pat_name patName, b.type patType
		from his_register a left join his_patient b on a.pat_id = b.id
		<where>
			<if test="currentTime != null">
				and begin_time &lt;= #{currentTime} and end_time &gt;= #{currentTime}
			</if>
			<if test="doctorId != null">
				and dentist_id = #{doctorId}
			</if>
			and a.is_appoint = 1
		</where>
	</select>

</mapper>